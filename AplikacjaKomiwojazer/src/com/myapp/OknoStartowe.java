/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.myapp;

import java.awt.Color;
import java.awt.Point;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import moja.biblioteka.AlgorytmGenetyczny;
import moja.biblioteka.Miasto;
import moja.biblioteka.Populacja;
import moja.biblioteka.TrasaMenadzer;

/**
 *
 * @author serv
 */
public class OknoStartowe extends javax.swing.JFrame {

    private Object OptionPane;

    /**
     * Creates new form OknoStartowe
     */
    public OknoStartowe() {
        initComponents();
        frame = this;
        animacjaWlaczona();
        oknoInfo = new InfoOkno();
        oknoInfo.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        trasaKoncowaPunkty = new javax.swing.JLabel();
        mojPanel1 = new com.myapp.MojPanel();
        jButton2 = new javax.swing.JButton();
        drogaStartowaLabel = new javax.swing.JLabel();
        rasaKoncowaInfo = new javax.swing.JLabel();
        drogaStartowaWartosc = new javax.swing.JLabel();
        trasaKoncowaWynik = new javax.swing.JLabel();
        trasaKoncowaPunktyWartosc = new javax.swing.JLabel();
        punktyStartoweLabel = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(798, 600));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Rozmiar populacji");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Liczba epok");

        jTextField2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField2.setText("100");

        jTextField4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField4.setText("1000");

        jButton1.setText("Generuj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generowanieAlgorytmu(evt);
            }
        });

        trasaKoncowaPunkty.setText("Rozwiązanie");

        mojPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 51)));

        javax.swing.GroupLayout mojPanel1Layout = new javax.swing.GroupLayout(mojPanel1);
        mojPanel1.setLayout(mojPanel1Layout);
        mojPanel1Layout.setHorizontalGroup(
            mojPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 480, Short.MAX_VALUE)
        );
        mojPanel1Layout.setVerticalGroup(
            mojPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jButton2.setText("Resetuj");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetujWartosci(evt);
            }
        });

        drogaStartowaLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        drogaStartowaLabel.setText("Trasa startowa");

        rasaKoncowaInfo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rasaKoncowaInfo.setText("Trasa końcowa");

        drogaStartowaWartosc.setBackground(new java.awt.Color(0, 153, 153));
        drogaStartowaWartosc.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        drogaStartowaWartosc.setForeground(new java.awt.Color(255, 0, 51));
        drogaStartowaWartosc.setText("Wynik");
        drogaStartowaWartosc.setToolTipText("");

        trasaKoncowaWynik.setBackground(new java.awt.Color(102, 102, 102));
        trasaKoncowaWynik.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        trasaKoncowaWynik.setForeground(new java.awt.Color(255, 0, 51));
        trasaKoncowaWynik.setText("Wynik");

        trasaKoncowaPunktyWartosc.setText("Przebieg trasy");

        punktyStartoweLabel.setText("Założenia początkowe");

        jToggleButton1.setText("Wlacz animacje");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wlczanimacjeAlgorytmu(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setText("Aktualnie wyliczana trasa");

        jLabel11.setText("Długość");

        jLabel12.setText("Punkty");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("Współczynik mutcji");

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTextField1.setText("0.15");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mojPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(trasaKoncowaPunkty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(rasaKoncowaInfo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(trasaKoncowaWynik))
                                    .addComponent(trasaKoncowaPunktyWartosc)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel11)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(drogaStartowaLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(drogaStartowaWartosc))
                                    .addComponent(jToggleButton1)
                                    .addComponent(punktyStartoweLabel))
                                .addGap(0, 202, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(130, 130, 130)
                                        .addComponent(jButton2))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addComponent(jLabel13)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jToggleButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(28, 28, 28)
                        .addComponent(punktyStartoweLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(drogaStartowaLabel)
                            .addComponent(drogaStartowaWartosc))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rasaKoncowaInfo)
                            .addComponent(trasaKoncowaWynik))
                        .addGap(18, 18, 18)
                        .addComponent(trasaKoncowaPunkty)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(trasaKoncowaPunktyWartosc, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(58, 58, 58)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addGap(0, 98, Short.MAX_VALUE))
                    .addComponent(mojPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void wlczanimacjeAlgorytmu(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wlczanimacjeAlgorytmu

    }//GEN-LAST:event_wlczanimacjeAlgorytmu

    private void resetujWartosci(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetujWartosci
        TrasaMenadzer.resetujMiasta();
        mojPanel1.resetuje();
        resetujLabels();
        oknoInfo.restetInfo();

    }//GEN-LAST:event_resetujWartosci

    private void generowanieAlgorytmu(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generowanieAlgorytmu
        generujAlgorytm();
    }//GEN-LAST:event_generowanieAlgorytmu

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OknoStartowe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OknoStartowe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OknoStartowe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OknoStartowe.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OknoStartowe().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel drogaStartowaLabel;
    private javax.swing.JLabel drogaStartowaWartosc;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JToggleButton jToggleButton1;
    private com.myapp.MojPanel mojPanel1;
    private javax.swing.JLabel punktyStartoweLabel;
    private javax.swing.JLabel rasaKoncowaInfo;
    private javax.swing.JLabel trasaKoncowaPunkty;
    private javax.swing.JLabel trasaKoncowaPunktyWartosc;
    private javax.swing.JLabel trasaKoncowaWynik;
    // End of variables declaration//GEN-END:variables

    private int liczbaepok = 50;
    private int rozmiarPopulacji = 1000;
    private JFrame frame;
    private boolean animacjaWlaczona;
    private InfoOkno oknoInfo;

    private synchronized void generujAlgorytm() {
        oknoInfo.restetInfo();
        Thread t = new Thread() {
            public void run() {
                try {

                    TrasaMenadzer.resetujMiasta();
                    pobierzWartosci();
                    // generowanie algorytmu
                    ArrayList<Point> punkty = mojPanel1.getPunkty();
                    // dla dwoch puktow nie generujemy
                    if (punkty.size() > 2) {
                        pobierzMiastaZPanelu(punkty);
                        // utworzenie opulacji
                        Populacja populacja = new Populacja(rozmiarPopulacji, true);
                        // wyswietlenie warunkow poczatkwych
                        wyswietlDlugoscTrasy(drogaStartowaWartosc, populacja);
                        wyswietTrasePunktow(punktyStartoweLabel, populacja);
                        // utworzenie nowej populacji aby porownywac drogi
                        populacja = AlgorytmGenetyczny.utworzNowaPopulcje(populacja);
                        String staratrasa,nowatrasa;
                      
                        for (int i = 0; i < liczbaepok; i++) {
                            staratrasa = populacja.pobierzNajlepszaTraseZPopulacji().toString();
                            populacja = AlgorytmGenetyczny.utworzNowaPopulcje(populacja);            // System.out.println( pop.getFittest().getDistance());
                            nowatrasa = populacja.pobierzNajlepszaTraseZPopulacji().toString();
                           
                            oknoInfo.appendText("" + populacja.pobierzNajlepszaTraseZPopulacji() + " dlugosc  = " + populacja.pobierzNajlepszaTraseZPopulacji().getDlugoscTrasy());
                            // wyswietlamy trase tylko taka ktora ma inna genotyp
                            if (!staratrasa.equals(nowatrasa) && animacjaWlaczona) {
                                rysujPolaczeniaPunktow(populacja.pobierzNajlepszaTraseZPopulacji().toString(), Color.GREEN);
                                wyswietlDlugoscTrasy(jLabel11, populacja);
                                Thread.sleep(500);
                            }
                        }
                        // jesli animacja ylaczona rysuj tylko trase koncowa
                        if (!animacjaWlaczona) {
                            rysujPolaczeniaPunktow(populacja.pobierzNajlepszaTraseZPopulacji().toString(), Color.GREEN);
                        }
                        wyswietlDlugoscTrasy(trasaKoncowaWynik, populacja);
                        wyswietTrasePunktow(trasaKoncowaPunktyWartosc, populacja);
                        JOptionPane.showMessageDialog(frame, "Koniec obliczen");
                    }

                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(frame, e.getMessage());
                }
            }
            // metoda pobiera wspolrzedne punktowi zapisuje w klasie TrasaMenadzer
            private void pobierzMiastaZPanelu(ArrayList<Point> punkty) {
                for (int i = 0; i < punkty.size(); i++) {
                    Miasto miasto = new Miasto();
                    miasto.setX((int) punkty.get(i).getX());
                    miasto.setY((int) punkty.get(i).getY());
                    miasto.setIndex(i);
                    TrasaMenadzer.dodajMiasto(miasto);
                }
            }

            private void wyswietTrasePunktow(JLabel label, Populacja populacja) {
                label.setText("" + populacja.pobierzNajlepszaTraseZPopulacji());
            }

            private void wyswietlDlugoscTrasy(JLabel label, Populacja populacja) {
                label.setText("" + populacja.pobierzNajlepszaTraseZPopulacji().getDlugoscTrasy());
            }
        };
        t.start();
    }

    private void pobierzWartosci() {
        rozmiarPopulacji = Integer.parseInt(jTextField2.getText());
        liczbaepok = Integer.parseInt(jTextField4.getText());
        double mutacja = Double.parseDouble(jTextField1.getText());
        AlgorytmGenetyczny.setWspolczynikMutacji(mutacja);

    }

    private void rysujPolaczeniaPunktow(String droga, Color color) {
        try {
            // usuwanie spacji
            String drogan = droga.trim();
            // konwertowanie do tablicy
            drogan = drogan.substring(1, drogan.length());
            String[] kolejnosc = drogan.split("\\D");
            // utworzenie listy indexow
            ArrayList<Integer> sciezka = new ArrayList<>();
            for (int i = 0; i < kolejnosc.length; i++) {
                if (!kolejnosc[i].equals("|")) {
                    // tworzenie sciezki
                    sciezka.add(Integer.parseInt(kolejnosc[i]));

                }
            }
            mojPanel1.rysujDroge(sciezka, color);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void resetujLabels() {
        drogaStartowaWartosc.setText("Wynik");
        punktyStartoweLabel.setText("");
        trasaKoncowaWynik.setText("Wynik");
        trasaKoncowaPunktyWartosc.setText("");
        jLabel11.setText("Długość");
        jLabel12.setText("Punkty");
    }

    private void animacjaWlaczona() {
        jToggleButton1.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent ev) {
                if (ev.getStateChange() == ItemEvent.SELECTED) {
                    animacjaWlaczona = true;

                } else if (ev.getStateChange() == ItemEvent.DESELECTED) {
                    animacjaWlaczona = false;
                }
            }
        });
    }
}
